.page-wrapper.resources
  #opportunity.content-wrapper
    ngx-loading([show]='creating') 
    form.form-group(#opportunityForm="ngForm" (ngSubmit)="saveOpportunity(opportunityForm.valid)" novalidate)
      .header-nav.fixed-header
        h1.headers
          | {{title}}
        .button-group([hidden]="saveBtn")
          button.save-button(type='submit' [ngClass]="{'btn-disabled': disableFlag, 'feedback-btn': !disableFlag}" [disabled]="disableFlag")
            span
              | Save
          button.cancel-button.feedback-btn((click)='goBack()' type='button') 
            span
              | Cancel 
        .button-group([hidden]="approveBtn")
          button.save-button.feedback-btn((click)='approve()' type='button' )
            span
              | Approve
          button.cancel-button.feedback-btn((click)='reject()' type='button') 
            span
              | Reject 
      .applicants-view.fixed-header(*ngIf="editFlag === true && opportunity.users" (click)="gotoApplicants(opportunity.id)")
        | Applicants: {{opportunity.users.length}}         
        img.link-arrow(src="../assets/imgs/link-arrow.svg") 
      .form-content 
        .item-info
          .input-label
            | NAME
            .invalid-validation([hidden]="name.valid || (name.pristine && !opportunityForm.submitted)")
              | Name is required
          input.resources-input(type="text" name="name" [disabled]="!approved" [ngClass]="{'disabled': !approved}" [(ngModel)]="opportunity.title" (ngModelChange)="onChange($event)" #name="ngModel" required) 
        .item-info
          .input-label
            | ORGANIZATION
            .invalid-validation([hidden]="selectedOrganization.length > 0 || !opportunityForm.submitted")
              | Organization is required
          angular2-multiselect(
              name = 'organization'
              [data]='organizationList'
              [(ngModel)]='selectedOrganization'
              [settings]='ktsSelectSettings'
              (onSelect)='onOrganizationSelect($event)'
              (onDeSelect)='onOrganizationDeSelect($event)'
            )
        .item-info
          .input-label
            | DESCRIPTION
            .invalid-validation([hidden]="details.valid || (details.pristine && !opportunityForm.submitted)")
              | Description is required
          textarea.resources-textarea(rows="6" name="details" [disabled]="!approved" [ngClass]="{'disabled': !approved}" [(ngModel)]="opportunity.details" (ngModelChange)="onChange($event)"  #details="ngModel" required)
        .item-info
          .input-label
            | APPLICATION LINK
            .invalid-validation([hidden]="link.valid || (link.pristine && !opportunityForm.submitted)")
              | Application link is required
            .invalid-validation([hidden]="!opportunity.link || opportunity.link === '' || validURL(opportunity.link) || (link.pristine && !opportunityForm.submitted)")
              | Application link is not correct
          input.resources-input([(ngModel)]="opportunity.link" [disabled]="!approved" [ngClass]="{'disabled': !approved}" name="link" #link="ngModel" (ngModelChange)="onChange($event)" required)
        .item-info
          .input-label-dropdown
              | CAREERS
          angular2-multiselect(
            name = 'careers'
            [data]='careerList'
            [(ngModel)]='selectedCareers'
            [settings]='ktsMultiSettings'
            (onSelect)='onCareerSelect($event)'
            (onDeSelect)='onCareerDeSelect($event)'
          )     
        .item-info.checkboxes([tooltip]="tooltip('Active')")
          input(type='checkbox' id='active' [(ngModel)]='opportunity.is_active' [disabled]="!approved" [ngModelOptions]="{standalone: true}" (ngModelChange)="onChange($event)")
          label(for='active')
            | Active  
 

